#!/bin/bash
# configures appdynamics apache agent
PATH=/bin:/sbin:/usr/bin:/usr/sbin

exit 1

VERSION=20.7.0
INSTALL=/apps/apmagents
PROFILE=/apps/apmagents/etc/profile
CONF=appdynamics_agent.conf
INFO=/apps/apmagents/machineagent/conf/controller-info.xml
INIT=wsgc-apmagent-apache
LOGS=/var/log/weblogs/appdynamics/$INIT
AGENT=https://artifactory.wsgc.com/artifactory/ext-release-local/com/appdynamics/appdynamics-sdk-native/$VERSION/appdynamics-sdk-native.tgz
umask 002

BailOut() {
  [ -n "$1" ] && echo "$*"
  echo "Removing $CONF $INIT"
  sudo rm -f /etc/httpd/conf.d/$CONF
  sudo rm -f /etc/init.d/$INIT /etc/rc3.d/$INIT
  sudo service httpd restart 
  exit 1
}

if [ "$1" = "disable" -o "$1" = "off" ]
then
  echo "* Disabling $INIT ***"
  sudo chkconfig $INIT off || true
  sudo service $INIT stop || true
  sudo rm -f /etc/httpd/conf.d/$CONF
  sudo rm -f /etc/init.d/$INIT /etc/rc3.d/$INIT
  sudo service httpd restart
  exit 0
fi

[ -e "$PROFILE" ] || BailOut "AppDynamics profile not found"

# run the apache agent install script
cd /tmp
if [ ! -e $INSTALL/appdynamics-sdk-native/install.sh ] 
then
    echo "* download $(basename $AGENT) $VERSION"
    curl -sqkO $AGENT || BailOut "Unable to d/l $(basename $AGENT)"
    sudo tar -xzf appdynamics-sdk-native.tgz -C $INSTALL
fi
cd $INSTALL/appdynamics-sdk-native || BailOut "Unable to cd to $INSTALL/appdynamics-sdk-native"
echo "* install agent"
sudo sh ./install.sh || BailOut "Install failed"

# move logs to existing httpd-exposed directory
echo "* Set up logs: $LOGS"
sudo mkdir -p $LOGS
sudo chmod 775 $LOGS
sudo mv -f $INSTALL/appdynamics-sdk-native/logs/* $LOGS 2>/dev/null
sudo rm -rf $INSTALL/appdynamics-sdk-native/logs
sudo ln -nsf $LOGS $INSTALL/appdynamics-sdk-native/logs
sudo find $LOGS -type d -exec chmod 775 {} \;

# move back to tmp and create conf and service files
cd /tmp

HTTPD_VERSION=$(httpd -v | grep -i version | awk -F/ '{ print $2 }' | awk -F \. '{ print $1 "." $2 }' )
case $HTTPD_VERSION in
  2.2 ) LIBMOD=libmod_appdynamics22.so ;;
  * ) LIBMOD=libmod_appdynamics.so  ;;
esac

# read in AppDynamics profile
. $PROFILE

# pull props from info file
ACCOUNT_NAME=$(grep "<account-name>" $INFO | tail -1 | awk -F '[<>]' '{ print $3 }')

# create httpd config for AppDynamics agent
cat > $CONF << EOF
# AppDynamics agent httpd config file
# generated by $(basename $0)

LoadFile $INSTALL/appdynamics-sdk-native/sdk_lib/lib/libzmq.so.3
LoadFile $INSTALL/appdynamics-sdk-native/sdk_lib/lib/libuuid.so.1
LoadFile $INSTALL/appdynamics-sdk-native/sdk_lib/lib/libappdynamics_native_sdk.so
LoadModule appdynamics_module $INSTALL/appdynamics-sdk-native/WebServerAgent/Apache/$LIBMOD

# AppDynamics properties from $PROFILE
AppDynamicsControllerHost   $APPDYNAMICS_CONTROLLER_HOSTNAME
AppDynamicsControllerPort   $APPDYNAMICS_CONTROLLER_PORT
#AppDynamicsApplication      $APPDYNAMICS_APPAGENT_APPLICATIONNAME-httpd
#AppDynamicsTier             $APPDYNAMICS_APPAGENT_TIERNAME
#AppDynamicsNode             $(hostname --short)
AppDynamicsAccessKey        $APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY
AppDynamicsAccountName      $ACCOUNT_NAME
AppDynamicsEnabled          ON
AppDynamicsControllerSSL    ON

AppDynamicsResolveBackends  ON
AppDynamicsReportAllInstrumentedModules ON
AppDynamicsTraceAsError     OFF
AppDynamicsLaunchProxy      OFF
EOF

echo "* create init scripts ($INIT)"
cat > $INIT << EOF
#!/bin/bash
# chkconfig: 35 99 99
# init script for AppDynamics apache plugin proxy process
PATH=/bin:/sbin:/usr/bin:/usr/sbin:$(dirname $APPDYNAMICS_JAVA)
export PATH

LOGS=$LOGS
SERVICE=$INIT
umask 002

export LANG=en_US.UTF-8
export LC_CTYPE=\$LANG
export LC_ALL=C

cd $INSTALL || { echo "Unable to cd to $INSTALL"; exit 1; }

# read AppDynamics profile
#. $PROFILE

case "\$1" in
  start )
    echo "Starting $INIT service..."
    cd \$LOGS
    nohup $INSTALL/appdynamics-sdk-native/runSDKProxy.sh > \$LOGS/\$SERVICE.out 2>&1 &
    ;;

  stop )
    echo "Stopping $INIT service..."
    PID=\$(ps -ef | egrep -i "runSDKProxy.sh|appdynamics-sdk-native/proxy" | egrep -vi "grep|\$\$" | awk '{ print \$2 }')
    [ -n "\$PID" ] && kill -9 \$PID
    ;;

  restart )
    eval \$0 stop
    eval \$0 start
    ;;
esac

exit 0
EOF

chmod 755 $INIT $CONF

# install new config file and init script
echo "* install new configs"
sudo cp $CONF /etc/httpd/conf.d
sudo cp $INIT /etc/init.d
sudo ln -nsf /etc/init.d/$INIT /etc/rc3.d/S99$INIT
sudo chkconfig --add $INIT
sudo chkconfig $INIT on

# restart apache
sudo service httpd restart || BailOut "Apache failed to restart"

# start the apmagent proxy service
sudo service $INIT stop
sudo service $INIT start

exit 0
