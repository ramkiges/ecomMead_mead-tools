#!/bin/bash
PATH=/apps/mead-tools:/apps:/apps/maven/latest/bin:/apps/java/bin:/apps/emacs-nox-24.5/bin:/home/mavenbuild/bin/devscripts:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/opt/puppetlabs/bin:/home/mavenbuild/bin:~/bin
export PATH

WSGC=/tmp/wsgc-$(basename $0)
DEVOPS=https://repos.wsgc.com/svn/devops
FRONTEND=application/frontend-2.1/qa/config/app/trunk
CERT=src/main/resources/tomcat/conf/apple-developer-merchantid-domain-association.txt
JENKINS=$(which jenkins-jnlp 2>/dev/null)
LOGIN="ptqaenv:ta8PoLe"
[ -z "$JENKINS" ] && BailOut "Can't find jenkins-jnlp"
# Jira icons
ICON_FAIL=" (x) "
ICON_SUCC=" (/) "
ICON_WARN=" (!) "
ICON_INFO=" (i) "

BailOut() {
	[[ -n $1 ]] && echo "***
ERROR: $*
***" 
    cd /tmp
    #rm -rf $WSGC/$(dirname $FRONTEND)

    exit 1
}

while getopts ":b:e:k:t:r:" opt 
do
    case ${opt} in
        b ) BRAND=$(echo $OPTARG | tr "A-Z" "a-z") ;;
        e ) ENV=$(echo $OPTARG | tr "A-Z" "a-z") ;;
        t ) TICKET=$(tr "a-z" "A-Z" <<< $OPTARG) ;;
        k ) KEY=$OPTARG ;;
        r ) RESTART=$OPTARG ;;
    esac

done

[ -z "$BRAND" ] && BailOut "Need brand"
[ -z "$ENV" ] && BailOut "Need environment"
#[ -z "$KEY" ] && BailOut "Need new key"
[ -z "$TICKET" ] && TICKET="DEVOPS"

/bin/echo -ne "Checking out frontend... "
rm -rf $WSGC/$(dirname $FRONTEND)
mkdir -p $WSGC/$(dirname $FRONTEND)
cd $WSGC/$(dirname $FRONTEND) 
svn -q co $DEVOPS/$FRONTEND $(basename $FRONTEND) || BailOut "Unable checkout frontend"
echo "Done"

if [[ -n $KEY ]]
then
  # install the new cert
  cd $WSGC/$(dirname $FRONTEND)/trunk/$BRAND/$ENV || BailOut "Could not cd to $(dirname $FRONTEND)/trunk/$BRAND"
  # create the conf directory if it doesn't exist
  [ -e src/main/resources/tomcat/conf ] || svn mkdir --parents src/main/resources/tomcat/conf
  echo "$KEY" > $CERT
  dos2unix $CERT
  svn add $CERT > /dev/null 2>&1
  svn propset svn:mime-type text/plain $CERT
  svn propset svn:eol-style native $CERT
  svn propset svn:keywords "Id Author LastChangedDate LastChangedBy" $CERT
  svn commit -q -m "[$TICKET] update apple-developer-merchantid-domain-association.txt ($BUILD_USER_ID)"

  [[ -n $TICKET ]] && jira-comment "$TICKET" "${ICON_SUCC}$(basename $0): apple-developer-merchantid updated for $BRAND $ENV ($BUILD_USER_ID)
$URL"

  if [[ $RESTART = "true" ]]
  then
    echo "Restart frontend for $BRAND $ENV"
    eval $JENKINS build -s wsgc-devops-frontend21-qa-single-env -p BRAND=$BRAND -p ENVIRONMENT=$ENV
    eval $JENKINS build -s checkenv -p Brand=$BRAND -p Environment=$ENV -p Ticket=$TICKET Options=Deploy-War -p Options=Rebuild-Config 
  else
    echo "Restart not selected"
  fi
fi

echo "*** Validate key ***"
AKAMAI=$(geturls $BRAND $ENV | grep -i akamai | awk '{ print $NF }')
URL="$AKAMAI/.well-known/apple-developer-merchantid-domain-association.txt"
SVN="$DEVOPS/$FRONTEND/$BRAND/$ENV/$CERT"

svn cat $SVN > /tmp/$BRAND-$ENV-merchantid-svn.txt
curl -sqk --user "$LOGIN" $URL > /tmp/$BRAND-$ENV-merchantid-url.txt
diff /tmp/$BRAND-$ENV-merchantid-svn.txt /tmp/$BRAND-$ENV-merchantid-url.txt >/dev/null 
if [[ $? -eq 0 ]]
then
  echo "*** File merchantid-url.txt in SVN and frontend matches ***"
  [[ -n $TICKET ]] && jira-comment "$TICKET" "${ICON_SUCC}$(basename $0): apple-developer-merchantid $BRAND $ENV deployed and ready for verification"
else
  echo "*** File merchantid-url.txt in SVN and frontend does not match ***"
fi

echo "Validation URL: $URL"
echo "SVN URL: $SVN"

cd /tmp
rm -rf $WSGC/$(dirname $FRONTEND)

exit 0

