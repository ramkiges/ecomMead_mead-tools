#!/bin/bash
# refreshes an Delphix environment - to be run after a Prod DB refresh
PATH=/apps/delphix-tools:/apps/mead-tools:/usr/local/bin:/bin:/usr/bin:/sbin:/usr/sbin:~/bin

# Jira icons
ICON_FAIL=" (x) "
ICON_SUCC=" (/) "
ICON_WARN=" (!) "
ICON_INFO=" (i) "
ICON_FLAG=" (flag) "
ICON_PLUS=" (+) "
ICON_MINUS=" (-) "
ICON_QUEST=" (?) "

LABEL="Delphix-Refresh"
DEBUG="com.wsgc.ecommerce.productcatalog.service,com.wsgc.inventory.transit.schedule"
DEVOPS=https://repos.wsgc.com/svn/devops
FRONTEND=application/frontend-2.1/qa/config/app/trunk
JENKINS_URL=https://ecombuild.wsgc.com/jenkins
[[ -z $RUNBY ]] && RUNBY=${BUILD_USER_ID}
[[ -z $RUNBY ]] && RUNBY=$(sed -es/^a_//g <<< $LOGNAME)

BailOut() {
  [[ -n $1 ]] && echo "$*"
  echo "Usage: $(basename $0) <brand> <enviro> <ticket>"
  exit 255
}

timeStamp() { echo ">>> $(date +'%Y-%m-%d %H:%M') $* <<<"; }

Notation() { echo "### $* "; }

BRAND=$1
ENVIRO=$2
[[ -z $TICKET ]] && TICKET=$3
[[ -n $TICKET ]] && MSG=$TICKET || MSG=DEVOPS
[[ -z $ENVIRO ]] && BailOut
export TICKET

[[ $ENVIRO = rgs1 ]] && SRC_CMX=uat3 || SRC_CMX=rgs1
SRC_WCM=$SRC_CMX
SRC_ECM=$SRC_CMX

INSTALLATION=$(get-installation $BRAND $ENVIRO)
SCHEMA=$(getschema $BRAND $ENVIRO | awk -F: '{ print $1 }')
DB=$(getschema $BRAND $ENVIRO | awk -F: '{ print $2 }')
[[ $DB =~ vweb || $DB =~ veqa ]] || { jira-close -t "$TICKET" -c "Not a Delphix environment"; BailOut "$BRAND $ENVIRO does not seem be on a Delphix vDB"; }

DEBUG=$(sed -es/' '/','/g <<< $DEBUG)

for jira in $TICKET
do
  jira-label $jira "$LABEL"
  Notation "Jira: https://jira.wsgc.com/browse/$jira"
done

# not sure we need to do this every time
BACKEND=$(getschema $BRAND $ENVIRO | awk -F: '{ print $2 }')
timeStamp "Update backend ($BACKEND)"
set-backend $BRAND $ENVIRO $BACKEND $TICKET
get-appsetting-job $BRAND $ENVIRO run >/dev/null 2>&1 &

#Notation "Get seed CMX generation"
#for SRC_CMX in rgs1 qa10 qa11 qa31
#do
#  cmx=$(get-cmx-generation $BRAND $SRC_CMX </dev/null 2>/dev/null)
#done
#timeStamp "Update CMX generation ($cmx) for $BRAND $ENVIRO"
#[[ -n $cmx ]] && jenkins-jnlp build set-ecm-generation \
#  -p RunBy=$RUNBY \
#  -p Brand=$BRAND \
#  -p Destination_Environment=$ENVIRO \
#  -p Generation=$cmx \
#  -p SubSystem=CMX \
#  -p AutoClose=false \
#  -p Ticket=$TICKET >/dev/null 2>&1 &

# since we're going to run a content job, we probably don't need this
#bgb=$(get-bgb-host $BRAND $ENVIRO | awk -F\. '{ print $1 }' | sed -es/-rk1v//g -es/-sac1v//g -es/bgb-//g)
#Notation "Stage CMX generation $cmx on $(get-bgb-host $BRAND $ENVIRO | awk -F\. '{ print $1 }')"
#jenkins-jnlp build -s stage-cmx-generation -p Brand=$BRAND -p Environment=$ENVIRO -p Generation=$cmx -p BGB=$bgb >/dev/null 2>&1 &

## grab a good WCM generation and stage it
#Notation "Get WCM generation from $SRC_WCM"
#for SRC_WCM in uat3 rgs1 qa10 qa11 qa31
#do
#  wcm=$(get-wcm-generation $BRAND $SRC_WCM </dev/null)
#  [[ -n $wcm ]] && break
#done
#[[ -z $wcm ]] && BailOut "Can't find WCM seed generation for $BRAND (from $SRC_WCM)"
#Notation "Update WCM generation "
#jenkins-jnlp build wcm-update-generation -p SITE=$BRAND -p ENV=$ENVIRO -p GENERATION=$wcm -p TICKET=$TICKET >/dev/null 2>&1 &

# clone ECM generatations
Notation "Update WCM/ECM/CMX generations from $SRC_ECM" 
jenkins-jnlp build -f copy-generations \
  -p Brand=$BRAND \
  -p Source_Environment=$SRC_ECM \
  -p Destination_Environment=$ENVIRO \
  -p CAT=true \
  -p CMX=true \
  -p Deploy_Content=false \
  -p Deploy_War=false \
  -p AutoClose=false \
  -p RunBy=$RUNBY \
  -p Ticket=$TICKET 

#CONTENT=$(jenkins-jnlp list-jobs | grep -i "deploy-$ENVIRO-$BRAND-CONTENT")
#[[ -z $CONTENT ]] && BailOut "Can't find content job for $BRAND $ENVIRO"
#jenkins-jnlp build -s $CONTENT -p FORCEBUILD=true -p TICKET=$TICKET

[[ $ENVIRO =~ uat ]] && OAUTH=uat
[[ $ENVIRO =~ bpv ]] && OAUTH=uat
[[ $ENVIRO =~ int ]] && OAUTH=uat
[[ -z $OAUTH ]] && OAUTH=qa
timeStamp "Update Oauth $BRAND $ENVIRO ($OAUTH)"
jenkins-jnlp -s build set-oauth -p Brand=$BRAND -p Environment=$ENVIRO -p Oauth=$OAUTH -p Ticket=$TICKET >/dev/null 2>&1

timeStamp "Re-deploy $BRAND $ENVIRO"
jenkins-jnlp build checkenv \
  -p Brand=$BRAND \
  -p Environment=$ENVIRO \
  -p Options=Clear-Logs \
  -p Options=Deploy-Content \
  -p Options=Deploy-War \
  -p Objects=$DEBUG \
  -p RunBy=$RUNBY \
  -p Ticket=$TICKET 
ret=$?

#  -p Options=Force-Content \
#  -p AutoClose=false \
#  -p Options=Validate-Appsettings \
#  -p Options=Rebuild-MFE \
#  -p Options=Deploy-MFE \
#  -p Options=Rebuild-Config \

[[ -$ret -eq 0 && -n $TICKET && $AUTO_CLOSE = "true" ]] && jira-close "$TICKET" "${ICON_SUCC}$(basename $0) auto-close"

exit $ret
