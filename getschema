#!/bin/bash
PATH=/opt/homebrew/bin:/usr/local/bin:/apps/mead-tools:/bin:/usr/bin:/sbin:/usr/sbin:$PATH
export PATH

FRONTEND="https://repos.wsgc.com/svn/devops/application/frontend-2.1"
APPSETTINGS="https://repos.wsgc.com/svn/devops//packaging/wsgc-appsettings-configuration/trunk/appsetting-properties/schema-site"
XCADM_REPO=git@github.wsgc.com:eCommerce-Kubernetes-Bedrock/xcadmin-helm-config.git

BRAND=$(tr '[:upper:]' '[:lower:]' <<< $1)
ENVIRO=$(tr '[:upper:]' '[:lower:]' <<< $2)

BailOut() {
  [[ -n $1 ]] && echo "$(hostname)/$(basename $0): $*" >&2
	exit 1
}

[[ -z $ENVIRO ]] && BailOut 

# corp snowflake
[[ $BRAND = "corp" && $ENVIRO="qa" ]] && { echo "ws_app_owner:webqa2"; exit 0; }

# admin snowflake
[[ $BRAND =~ adm ]] && { getschema ws $ENVIRO; exit $?; }

[[ $BRAND =~ default ]] && exit 0

# test svn access
test-svn-access || BailOut "SVN failed"

# snowflake!
if [[ $BRAND = "xcadm" || $BRAND = "admin" ]]
then
  TMP=$HOME/$(basename $0).d
  rm -rf $TMP
  git clone -q $XCADM_REPO $TMP || BailOut "Unable to clone $XCADM_REPO"
  cd $TMP/config
  [[ -e $ENVIRO ]] || BailOut "Can't find admin environment $ENVIRO"
  cd $ENVIRO

  dbOwner=$(yq eval ".appspecProperties.TableOwner" values.yaml | head -1 | tr '[:upper:]' '[:lower:]')
  [[ -z $dbOwner ]] && BailOut "Unable to parse DB owner for admin $ENVIRO"

  url=$(yq eval ".rootXml.dbResources[] | select(has(\"name\")) | select(.name=\"$ENVIRO\").url" values.yaml | head -1)
  [[ -z $url ]] && BailOut "Unable to parse DB connection for admin $ENVIRO"

  dbHost=$(awk -F@ '{ print $2 }' <<< $url)
  dbSID=$(awk -F/ '{ print $NF }' <<< $dbHost)
  [[ -z $dbSID ]] && dbSID=$(awk -F: '{ print $NF }' <<< $dbHost)

  echo "$dbOwner:$dbSID"
  rm -rf $TMP
  exit 0
fi

# weird corner cases
[ "$ENVIRO"  = "uat" ] && ENVIRO="uat1"
[ "$ENVIRO"  = "qa" ] && ENVIRO="qa1"
[ "$ENVIRO"  = "ca1" ] && ENVIRO="cadev1"
[ "$ENVIRO"  = "cadev" ] && ENVIRO="cadev1"
[ "$ENVIRO"  = "regression" ] && ENVIRO="rgs1"
[ "$ENVIRO"  = "regression2" ] && ENVIRO="rgs2"
[ "$ENVIRO"  = "integration" ] && ENVIRO="int"
[ "$ENVIRO"  = "integration1" ] && ENVIRO="int"
[ "$ENVIRO"  = "integration2" ] && ENVIRO="int2"

# figure out which setting realm we're in 
echo "$ENVIRO" | egrep -qEi "jukebox|^qa|^int|^rgs|^uat|^stg|^dev|^perf|^ecmca|^ecmqa|^ecmprd|^ecmint|^ecmuat|^ecmprv|^ecmprev|^bpv|^staging|^ca" && REALM=qa
echo "$ENVIRO" | egrep -qEi "preprdab|preprdrk|prdab|prdrk|aktest|^prd|^caprd" && REALM=prd
[[ -z $REALM ]] && BailOut "No 'realm' found for $BRAND $ENVIRO"

[[ $ENVIRO = "prd" ]] && ENVIRO=prdrk
[[ $ENVIRO = "caprd" ]] && ENVIRO=caprdab

POM=$FRONTEND/$REALM/config/app/trunk/$BRAND/$ENVIRO/pom.xml

OWNER=$(svn cat $POM 2>/dev/null | egrep -i "<frontend.tableowner>|<xcadm.table.owner>" | awk -F '[<>]' '{ print $3 }' | tr "A-Z" "a-z")
SID=$(svn cat $POM 2>/dev/null | egrep -i "<frontend.datasource.ecomDB.url>|<xcadm.datasource.ecomDB.url>" | awk -F '[<>]' '{ print $3 }' | tr "A-Z" "a-z" | awk -F '[:/]'  '{ print $NF }')
echo "$SID" | egrep -iq "description|load_balance|address|protocol" && SID=$(echo "$SID" | tr 'A-Z' 'a-z' | awk -F 'service_name=' '{ print $2 }' | awk -F\) '{ print $1 }')
# for any jukebox env, the schema should be the same as the environment, but with dashes replaced with underscores
[[ $ENVIRO =~ juke ]] && { OWNER="jukebox"; SID=webqa2; }

[[ -z $OWNER ]] && BailOut "Can't find tableowner for $BRAND $ENVIRO ($POM)"
[[ -z $SID ]] && BailOut "Can't find SID for $BRAND $ENVIRO ($POM)"

echo "$OWNER:$SID"

exit 0
