#!/bin/bash
PATH=/apps/nead-tools:/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:~/bin
ART_CRED=~/.artifactory
A_URL=
DEST=.

BailOut() {
    [ -n "$1" ] && echo "$*" >&2
    echo "Usage: $(basename $0) -a <artifact> -f <file> -v [version]" >&2
    exit 1    
}

[[ -n $1 ]] && ARTIFACT=$1 

## argument assignment
while getopts "ha:f:v:d:" opt 
do
    case ${opt} in
        h) BailOut ;;            
        a) ARTIFACT=$OPTARG ;;
        v) VERSION=$OPTARG ;;
        f) FILE=$OPTARG ;;
        d) DEST=$OPTARG ;;
    esac
done

[[ -z $ARTIFACT ]] && BailOut

URL=$(SHOWREPO=true getversion $ARTIFACT | grep -i "repo=" | awk -F= '{ print $2 }')
[[ -z $URL ]] && BailOut "Can't find URL for $ARTIFACT"

[[ -z $VERSION ]] && VERSION=$(getversion $ARTIFACT)

URL=$URL/$VERSION

if [[ -z $FILE ]] 
then
  echo "Files: " >&2
  curl -sqk $URL/ | grep "$ARTIFACT-$VERSION" | awk -F '[<>]' '{ print $3 }'
else
  curl -fsqk $URL/ | grep "$ARTIFACT-$VERSION.$FILE" >/dev/null 2>&1 && A_URL=$URL/$ARTIFACT-$VERSION.$FILE
  curl -fsqk $URL/ | grep "$ARTIFACT-$VERSION-$FILE" >/dev/null 2>&1 && A_URL=$URL/$ARTIFACT-$VERSION-$FILE
  [[ -z $A_URL ]] && BailOut "Unable to find URL for $ARTIFACT $VERSION"
  curl -fsq -O $A_URL || BailOut "Unable to download $A_URL"
  echo "$DEST/$(basename $A_URL"
fi

exit 0
